var Demo=function(n){var e={};function t(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return n[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=n,t.c=e,t.d=function(n,e,r){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:r})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var o in n)t.d(r,o,function(e){return n[e]}.bind(null,o));return r},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=4)}([function(n,e,t){(function(e){(function(){var t,r,o,a,i,c;"undefined"!=typeof performance&&null!==performance&&performance.now?n.exports=function(){return performance.now()}:null!=e&&e.hrtime?(n.exports=function(){return(t()-i)/1e6},r=e.hrtime,a=(t=function(){var n;return 1e9*(n=r())[0]+n[1]})(),c=1e9*e.uptime(),i=a-c):Date.now?(n.exports=function(){return Date.now()-o},o=Date.now()):(n.exports=function(){return(new Date).getTime()-o},o=(new Date).getTime())}).call(this)}).call(this,t(2))},function(n,e,t){},function(n,e){var t,r,o=n.exports={};function a(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function c(n){if(t===setTimeout)return setTimeout(n,0);if((t===a||!t)&&setTimeout)return t=setTimeout,setTimeout(n,0);try{return t(n,0)}catch(e){try{return t.call(null,n,0)}catch(e){return t.call(this,n,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:a}catch(n){t=a}try{r="function"==typeof clearTimeout?clearTimeout:i}catch(n){r=i}}();var l,u=[],f=!1,s=-1;function d(){f&&l&&(f=!1,l.length?u=l.concat(u):s=-1,u.length&&v())}function v(){if(!f){var n=c(d);f=!0;for(var e=u.length;e;){for(l=u,u=[];++s<e;)l&&l[s].run();s=-1,e=u.length}l=null,f=!1,function(n){if(r===clearTimeout)return clearTimeout(n);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(n);try{r(n)}catch(e){try{return r.call(null,n)}catch(e){return r.call(this,n)}}}(n)}}function p(n,e){this.fun=n,this.array=e}function h(){}o.nextTick=function(n){var e=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)e[t-1]=arguments[t];u.push(new p(n,e)),1!==u.length||f||c(v)},p.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=h,o.addListener=h,o.once=h,o.off=h,o.removeListener=h,o.removeAllListeners=h,o.emit=h,o.prependListener=h,o.prependOnceListener=h,o.listeners=function(n){return[]},o.binding=function(n){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(n){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},,function(n,e,t){"use strict";t.r(e);t(1);var r=t(0),o=t.n(r);function a(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}var i=/^(#)?([0-9a-f]+)$/i;function c(n){var e=n.toString(16);return 1===e.length?"0"+e:e}function l(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+6*(e-n)*t:t<.5?e:t<2/3?n+(e-n)*(2/3-t)*6:n}var u,f,s,d,v,p,h,m,g,b,y,x,w,_,S=function(){function n(e,t,r){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.r=void 0,this.g=void 0,this.b=void 0,this.r=e,this.g=t,this.b=r}var e,t,r;return e=n,r=[{key:"validate",value:function(e){var t;if("string"!=typeof e||!(t=i.exec(e)))return null;var r=t[2];return 3===r.length?new n(17*parseInt(r[0],16),17*parseInt(r[1],16),17*parseInt(r[2],16)):6===r.length?new n(parseInt(r.substring(0,2),16),parseInt(r.substring(2,4),16),parseInt(r.substring(4,6),16)):null}},{key:"from",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(Array.isArray(e)){for(var r=e.length,o=new Float32Array(3*r),a=t/255,i=0,c=0;c<r;c++){var l=n.from(e[c]);o[i++]=l.r*a,o[i++]=l.g*a,o[i++]=l.b*a}return o}var u=n.validate(e);if(!u)throw new Error("Invalid color "+e);return u.r*=t,u.g*=t,u.b*=t,u}},{key:"fromHSL",value:function(e,t,r){var o,a,i;if(t<=0)o=a=i=r;else{var c=r<.5?r*(1+t):r+t-r*t,u=2*r-c;o=l(u,c,e+1/3),a=l(u,c,e),i=l(u,c,e-1/3)}return new n(Math.round(255*o),Math.round(255*a),Math.round(255*i))}}],(t=[{key:"mix",value:function(e,t,r){return r||(r=new n),r.r=this.r+(e.r-this.r)*t|0,r.g=this.g+(e.g-this.g)*t|0,r.b=this.b+(e.b-this.b)*t|0,r}},{key:"multiply",value:function(e,t){return t||(t=new n),t.r=this.r*e,t.g=this.g*e,t.b=this.b*e,t}},{key:"toRGBHex",value:function(){return"#"+c(this.r)+c(this.g)+c(this.b)}},{key:"toHex",value:function(){return(this.r<<16)+(this.g<<8)+this.b}}])&&a(e.prototype,t),r&&a(e,r),n}(),A=(Math.sqrt(5),Math.PI,{width:0,height:0}),T=0,C=0;function D(){var n=-16&window.innerWidth,e=0|window.innerHeight;A.width=n,A.height=e,u.width=n,u.height=e,T=n/2,C=e/2,f.viewport(0,0,u.width,u.height)}function I(n,e,t){var r=n.createShader(e);if(n.shaderSource(r,t),n.compileShader(r),n.getShaderParameter(r,n.COMPILE_STATUS))return r;console.error(n.getShaderInfoLog(r)),n.deleteShader(r)}function L(n){var e=y?1:-1;f.uniform1f(v,o()()/1e3),f.uniform2f(p,A.width,A.height),f.uniform4f(h,T,A.height-C,x*e,(A.height-w)*e),f.clearColor(0,0,0,0),f.clear(f.COLOR_BUFFER_BIT);var t=f.TRIANGLES;f.drawArrays(t,0,6),requestAnimationFrame(L)}function P(n){y&&(T=n.clientX-_.left+self.pageXOffset,C=n.clientY-_.top+self.pageYOffset)}function k(n){y=!0,x=n.clientX-_.left+self.pageXOffset,w=n.clientY-_.top+self.pageYOffset,T=x,C=w}function E(n){y=!1}window.onload=function(){if(u=document.getElementById("screen"),!(f=u.getContext("webgl2")))return u.parentNode.removeChild(u),n="Cannot run shader. Your browser does not support WebGL2.",void(document.getElementById("out").innerHTML="<p>"+n+"</p>");var n,e=I(f,f.VERTEX_SHADER,"#version 300 es\n#define GLSLIFY 1\n\n// an attribute is an input (in) to a vertex shader.\n// It will receive data from a buffer\nin vec4 a_position;\n\n// all shaders have a main function\nvoid main() {\n\n    // gl_Position is a special variable a vertex shader\n    // is responsible for setting\n    gl_Position = a_position;\n}\n"),t=I(f,f.FRAGMENT_SHADER,"#version 300 es\nprecision lowp float;\n#define GLSLIFY 1\n\nuniform float u_time;\nuniform vec2 u_resolution;\nuniform vec4 u_mouse;\nuniform vec3 u_palette[8];\nuniform float u_shiny[8];\nuniform vec3 u_background[30];\n\nconst float pi = 3.141592653589793;\nconst float tau = pi * 2.0;\nconst float hpi = pi * 0.5;\nconst float qpi = pi * 0.25;\nconst float phi = (1.0+sqrt(5.0))/2.0;\n\nout vec4 outColor;\n\n#define MAX_STEPS 100\n#define MAX_DIST 150.\n#define SURF_DIST .001\n\n#define ROT(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n#define SHEARX(a) mat2(1, 0, sin(a), 1)\n\nfloat rand(float n){return fract(sin(n) * 43758.5453123);}\n\n// Camera helper\n\nvec3 Camera(vec2 uv, vec3 p, vec3 l, float z) {\n    vec3 f = normalize(l-p),\n    r = normalize(\n    cross(\n    vec3(0, 1, 0),\n    f\n    )\n    ),\n    u = cross(f, r),\n    c = p + f * z,\n    i = c + uv.x*r + uv.y*u,\n    d = normalize(i-p);\n    return d;\n}\n\n// 2d rotation matrix helper\nmat2 Rot(float a) {\n    float x = cos(a);\n    float y = sin(a);\n    return mat2(x, -y, y, x);\n}\n\n// RAY MARCHING PRIMITIVES\n\nfloat smin(float a, float b, float k) {\n    float h = clamp(0.5+0.5*(b-a)/k, 0., 1.);\n    return mix(b, a, h) - k*h*(1.0-h);\n}\n\nfloat sdCapsule(vec3 p, vec3 a, vec3 b, float r) {\n    vec3 ab = b-a;\n    vec3 ap = p-a;\n\n    float t = dot(ab, ap) / dot(ab, ab);\n    t = clamp(t, 0., 1.);\n\n    vec3 c = a + t*ab;\n\n    return length(p-c)-r;\n}\n\nfloat sdCylinder(vec3 p, vec3 a, vec3 b, float r) {\n    vec3 ab = b-a;\n    vec3 ap = p-a;\n\n    float t = dot(ab, ap) / dot(ab, ab);\n    //t = clamp(t, 0., 1.);\n\n    vec3 c = a + t*ab;\n\n    float x = length(p-c)-r;\n    float y = (abs(t-.5)-.5)*length(ab);\n    float e = length(max(vec2(x, y), 0.));\n    float i = min(max(x, y), 0.);\n\n    return e+i;\n}\n\nfloat sdCappedCylinder( vec3 p, float h, float r )\n{\n    vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(h,r);\n    return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\nfloat sdSphere(vec3 p, float s)\n{\n    return length(p)-s;\n}\n\nfloat sdTorus(vec3 p, vec2 r) {\n    float x = length(p.xz)-r.x;\n    return length(vec2(x, p.y))-r.y;\n}\n\nfloat sdRoundBox(vec3 p, vec3 b, float r)\n{\n    vec3 q = abs(p) - b;\n    return length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0) - r;\n}\n\nfloat sdBeam(vec3 p, vec3 c)\n{\n    return length(p.xz-c.xy)-c.z;\n}\n\nfloat dBox(vec3 p, vec3 s) {\n    p = abs(p)-s;\n    return length(max(p, 0.))+min(max(p.x, max(p.y, p.z)), 0.);\n}\n\nvec2 opUnion(vec2 curr, float d, float id)\n{\n    if (d < curr.x)\n    {\n        curr.x = d;\n        curr.y = id;\n    }\n\n    return curr;\n}\n\nvec2 softMinUnion(vec2 curr, float d, float id)\n{\n    if (d < curr.x)\n    {\n        curr.x = smin(curr.x, d, 0.5);\n        curr.y = id;\n    }\n\n    return curr;\n}\n\nfloat shape(float v, float x)\n{\n    return x > 0.0 ? -abs(v) : abs(v);\n}\n\nvec2 getDistance(vec3 p) {\n\n    float t = u_time;\n\n    float resultA = (sdSphere(p - vec3(sin(t) * 2.0,-2,0), 2.0) + sdSphere(p - vec3(-sin(t) * 2.0,-2,0), 2.0));\n\n    float resultB = smin(sdSphere(p - vec3(sin(t) * 2.0,2,0), 2.0), sdSphere(p - vec3(-sin(t) * 2.0,2,0), 2.0), 0.5);\n    return opUnion(vec2(resultA, 2.0), resultB, 3.0);\n\n}\n\nvec3 rayMarch(vec3 ro, vec3 rd) {\n\n    float dO = 0.;\n    float id = 0.0;\n\n    int i;\n\n    for (i=0; i < MAX_STEPS; i++) {\n        vec3 p = ro + rd*dO;\n        vec2 result = getDistance(p);\n        float dS = result.x;\n        dO += dS;\n        id = result.y;\n        if (dO > MAX_DIST || abs(dS) < SURF_DIST * (dO*.125 + 1.))\n        break;\n    }\n\n    return vec3(dO, id, i);\n}\n\nvec3 getNormal(vec3 p) {\n    float d = getDistance(p).x;\n    vec2 e = vec2(.001, 0);\n\n    vec3 n = d - vec3(\n    getDistance(p-e.xyy).x,\n    getDistance(p-e.yxy).x,\n    getDistance(p-e.yyx).x\n    );\n\n    return normalize(n);\n}\n\nvec3 getPaletteColor(float id)\n{\n    int last = u_palette.length() - 1;\n    //return id < float(last) ? mix(u_palette[int(id)], u_palette[int(id) + 1], fract(id)) : u_palette[last];\n    return mix(u_palette[int(id)], u_palette[int(id) + 1], fract(id));\n}\n\nvec3 applyFog(\nin vec3  rgb,      // original color of the pixel\nin float distance, // camera to point distance\nin vec3  rayOri,   // camera position\nin vec3  rayDir,\nin vec3 p     // camera to point vector\n)\n{\n    float pos = p.z;\n\n    float c = 0.005;\n    float b = 2.0;// + sin((pos + p.x * sin(pos * 0.27)) * 0.31 ) * 0.15 + sin(pos * 0.17 ) * 0.15;\n\n    float fogAmount = c * exp(-rayOri.y*b) * (1.0-exp( -distance*rayDir.y*b ))/rayDir.y;\n    vec3  fogColor  = vec3(1);\n    return mix( rgb, fogColor, fogAmount );\n}\n\nfloat softshadow( in vec3 ro, in vec3 rd, float k, float mx )\n{\n    float res = 1.0;\n    float ph = 1e20;\n    for( float t=0.001; t < mx; )\n    {\n        float h = getDistance(ro + rd*t).x;\n        if( h < 0.0001 )\n        return 0.0;\n\n        float y = h * h / ( 2.0 * ph );\n        float d = sqrt( h * h - y * y);\n        res = min( res, k * d /max(0.0, t -y) );\n        ph = h;\n        t += h;\n    }\n    return res;\n}\n\nvec3 getBackground(in vec3 n)\n{\n    vec3 tb = vec3(0, n.y > 0.0 ? 1 : -1 , 0);\n    vec3 tbCol = u_background[(n.y > 0.0 ? 5 : 4)];\n\n    vec3 rl = vec3(n.x > 0.0 ? 1 : -1 , 0, 0);\n    vec3 rlCol = u_background[(n.x > 0.0 ? 0 : 2)];\n\n    vec3 fb = vec3(0, 0, n.z > 0.0 ? 1 : -1);\n    vec3 fbCol = u_background[(n.z > 0.0 ? 1 : 3)];\n\n    float a1 = length(cross(n, tb));\n    float a2 = length(cross(n, rl));\n    float a3 = length(cross(n, fb));\n\n    return tbCol * (1.0 - a1) + rlCol * (1.0 - a2) + fbCol * (1.0 - a3);\n}\n\nvoid main(void)\n{\n    vec2 uv = (gl_FragCoord.xy-.5*u_resolution.xy)/u_resolution.y;\n\n    vec2 m = u_mouse.xy/u_resolution.xy;\n\n    vec3 ro = vec3(\n        0,\n        0,\n        -20\n    );\n\n    ro.yz *= Rot((-m.y + 0.5) * pi + u_time * 0.27);\n    ro.xz *= Rot((-m.x + 0.5) * 7.0 - u_time * 0.31);\n\n    vec3 lookAt = vec3(0, 1, 0);\n\n    vec3 rd = Camera(uv, ro, lookAt, 1.5);\n\n    float t = u_time * 0.025;\n\n    float pos = fract(t * 4.0);\n    float id = mod(floor(t * 4.0), 4.0);\n    vec3 col = getBackground(rd);\n\n    vec3 result = rayMarch(ro, rd);\n    float d = result.x;\n\n    vec3 p = ro + rd * d;\n    if (d < MAX_DIST) {\n\n        vec3 lightPos = vec3(-4,4,-4);\n        //vec3 lightPos = vec3(-40,20,0);\n        vec3 lightDir = normalize(lightPos - p);\n        vec3 norm = getNormal(p);\n\n        vec3 lightColor = vec3(1.0);\n\n        float id = result.y;\n\n        // ambient\n        vec3 ambient = lightColor * vec3(0.001,0.005,0.01);\n\n        // diffuse\n        float diff = max(dot(norm, lightDir), 0.0);\n        vec3 tone = getPaletteColor(id);\n\n        //float shadow = softshadow(p, lightDir, 2.0);\n        //vec3 diffuse = lightColor * pow(vec3(shadow),vec3(1.0,1.2,1.5)) * (diff * tone);\n\n        // specular\n        vec3 viewDir = normalize(rd);\n        vec3 reflectDir = reflect(lightDir, norm);\n        float spec = pow(max(dot(viewDir, reflectDir), 0.0), u_shiny[int(id)]);\n        //float shadow = softshadow(p, lightDir, 10.0, length(lightPos - p));\n        vec3 specular = lightColor * spec * vec3(0.7843,0.8823,0.9451) * 0.5;\n\n        vec3 ref = getBackground(reflect(rd, norm));\n        vec3 diffuse = diff * tone;\n\n        col = ref * 0.5 + ambient + (diffuse + specular) ;\n\n    }\n    //col = applyFog(col, d, ro, rd, p);\n\n    col = pow(col, vec3(1.0/2.2));\n\n    outColor = vec4(\n        col,\n        1.0\n    );\n\n    //outColor = vec4(1,0,1,1);\n}\n");d=function(n,e,t){var r=n.createProgram();if(n.attachShader(r,e),n.attachShader(r,t),n.linkProgram(r),n.getProgramParameter(r,n.LINK_STATUS))return r;console.error(n.getProgramInfoLog(r)),n.deleteProgram(r)}(f,e,t);var r=f.getAttribLocation(d,"a_position"),o=f.createBuffer();f.bindBuffer(f.ARRAY_BUFFER,o);f.bufferData(f.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,1,1,-1]),f.STATIC_DRAW),s=f.createVertexArray(),f.bindVertexArray(s),f.enableVertexAttribArray(r);var a=f.FLOAT;f.vertexAttribPointer(r,2,a,!1,0,0),D(),f.viewport(0,0,f.canvas.width,f.canvas.height),v=f.getUniformLocation(d,"u_time"),p=f.getUniformLocation(d,"u_resolution"),h=f.getUniformLocation(d,"u_mouse"),m=f.getUniformLocation(d,"u_palette"),g=f.getUniformLocation(d,"u_background"),b=f.getUniformLocation(d,"u_shiny"),f.useProgram(d),f.bindVertexArray(s),window.addEventListener("resize",D,!0),u.addEventListener("mousemove",P,!0),u.addEventListener("mousedown",k,!0),document.addEventListener("mouseup",E,!0),_=document.getElementById("screen").getBoundingClientRect(),f.uniform3fv(m,S.from(["#000","#fff","#f00","#010144","#0f0","#ff0","#0ff","#f0f"],1)),f.uniform3fv(g,S.from(["#62b9b9","#0784aa","#50aead","#63adad","#050401","#d8f9ba"],1)),f.uniform1fv(b,new Float32Array([10,10,10,100,10,10,10,10])),requestAnimationFrame(L)}}]);
//# sourceMappingURL=bundle-main-fb812181dcc597716e19.js.map