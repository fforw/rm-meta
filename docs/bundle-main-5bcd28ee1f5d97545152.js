var Demo =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/performance-now/lib/performance-now.js":
/*!*************************************************************!*\
  !*** ./node_modules/performance-now/lib/performance-now.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.12.2
(function() {
  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;

  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
    module.exports = function() {
      return performance.now();
    };
  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
    module.exports = function() {
      return (getNanoSeconds() - nodeLoadTime) / 1e6;
    };
    hrtime = process.hrtime;
    getNanoSeconds = function() {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };
    moduleLoadTime = getNanoSeconds();
    upTime = process.uptime() * 1e9;
    nodeLoadTime = moduleLoadTime - upTime;
  } else if (Date.now) {
    module.exports = function() {
      return Date.now() - loadTime;
    };
    loadTime = Date.now();
  } else {
    module.exports = function() {
      return new Date().getTime() - loadTime;
    };
    loadTime = new Date().getTime();
  }

}).call(this);

//# sourceMappingURL=performance-now.js.map

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./src/Color.js":
/*!**********************!*\
  !*** ./src/Color.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Color; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var colorRegExp = /^(#)?([0-9a-f]+)$/i;

function hex(n) {
  var s = n.toString(16);
  return s.length === 1 ? "0" + s : s;
}

function hue2rgb(p, q, t) {
  if (t < 0) t += 1;
  if (t > 1) t -= 1;
  if (t < 1 / 6) return p + (q - p) * 6 * t;
  if (t < 1 / 2) return q;
  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
  return p;
}

var Color = /*#__PURE__*/function () {
  function Color(r, g, b) {
    _classCallCheck(this, Color);

    this.r = void 0;
    this.g = void 0;
    this.b = void 0;
    this.r = r;
    this.g = g;
    this.b = b;
  }

  _createClass(Color, [{
    key: "mix",
    value: function mix(other, ratio, out) {
      if (!out) {
        out = new Color();
      }

      out.r = this.r + (other.r - this.r) * ratio | 0;
      out.g = this.g + (other.g - this.g) * ratio | 0;
      out.b = this.b + (other.b - this.b) * ratio | 0;
      return out;
    }
  }, {
    key: "multiply",
    value: function multiply(n, out) {
      if (!out) {
        out = new Color();
      }

      out.r = this.r * n;
      out.g = this.g * n;
      out.b = this.b * n;
      return out;
    }
  }, {
    key: "toRGBHex",
    value: function toRGBHex() {
      return "#" + hex(this.r) + hex(this.g) + hex(this.b);
    }
  }, {
    key: "toHex",
    value: function toHex() {
      return (this.r << 16) + (this.g << 8) + this.b;
    }
  }], [{
    key: "validate",
    value: function validate(color) {
      var m;

      if (typeof color !== "string" || !(m = colorRegExp.exec(color))) {
        return null;
      }

      var col = m[2];

      if (col.length === 3) {
        return new Color(parseInt(col[0], 16) * 17, parseInt(col[1], 16) * 17, parseInt(col[2], 16) * 17);
      } else if (col.length === 6) {
        return new Color(parseInt(col.substring(0, 2), 16), parseInt(col.substring(2, 4), 16), parseInt(col.substring(4, 6), 16));
      } else {
        return null;
      }
    }
  }, {
    key: "from",
    value: function from(color) {
      var factor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1.0;

      if (Array.isArray(color)) {
        var length = color.length;
        var array = new Float32Array(length * 3);
        var f = factor / 255;
        var off = 0;

        for (var i = 0; i < length; i++) {
          var _col = Color.from(color[i]);

          array[off++] = _col.r * f;
          array[off++] = _col.g * f;
          array[off++] = _col.b * f;
        }

        return array;
      }

      var col = Color.validate(color);

      if (!col) {
        throw new Error("Invalid color " + color);
      }

      col.r *= factor;
      col.g *= factor;
      col.b *= factor;
      return col;
    }
  }, {
    key: "fromHSL",
    value: function fromHSL(h, s, l) {
      var r, g, b;

      if (s <= 0) {
        r = g = b = l; // achromatic
      } else {
        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
        var p = 2 * l - q;
        r = hue2rgb(p, q, h + 1 / 3);
        g = hue2rgb(p, q, h);
        b = hue2rgb(p, q, h - 1 / 3);
      }

      return new Color(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255));
    }
  }]);

  return Color;
}();



/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style.css */ "./src/style.css");
/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_css__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var performance_now__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! performance-now */ "./node_modules/performance-now/lib/performance-now.js");
/* harmony import */ var performance_now__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(performance_now__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _rm_05_vert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rm-05.vert */ "./src/rm-05.vert");
/* harmony import */ var _rm_05_frag__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rm-05.frag */ "./src/rm-05.frag");
/* harmony import */ var _Color__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Color */ "./src/Color.js");
// noinspection ES6UnusedImports




 //console.log(fragmentShaderSource)

var PHI = (1 + Math.sqrt(5)) / 2;
var TAU = Math.PI * 2;
var DEG2RAD_FACTOR = TAU / 360;
var config = {
  width: 0,
  height: 0
};
var canvas, gl, vao, program; // uniform: current time

var u_time;
var u_resolution;
var u_mouse;
var u_palette;
var u_background;
var u_shiny;
var mouseX = 0,
    mouseY = 0,
    mouseDown,
    startX,
    startY; // Get the container element's bounding box

var canvasBounds;

function resize() {
  var width = window.innerWidth & ~15;
  var height = window.innerHeight | 0;
  config.width = width;
  config.height = height;
  canvas.width = width;
  canvas.height = height;
  mouseX = width / 2;
  mouseY = height / 2;
  gl.viewport(0, 0, canvas.width, canvas.height);
}

function createShader(gl, type, source) {
  var shader = gl.createShader(type);
  gl.shaderSource(shader, source);
  gl.compileShader(shader);
  var success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);

  if (success) {
    return shader;
  }

  console.error(gl.getShaderInfoLog(shader)); // eslint-disable-line

  gl.deleteShader(shader);
  return undefined;
}

function createProgram(gl, vertexShader, fragmentShader) {
  var program = gl.createProgram();
  gl.attachShader(program, vertexShader);
  gl.attachShader(program, fragmentShader);
  gl.linkProgram(program);
  var success = gl.getProgramParameter(program, gl.LINK_STATUS);

  if (success) {
    return program;
  }

  console.error(gl.getProgramInfoLog(program)); // eslint-disable-line

  gl.deleteProgram(program);
  return undefined;
}

function printError(msg) {
  document.getElementById("out").innerHTML = "<p>" + msg + "</p>";
}

function main(time) {
  var f = mouseDown ? 1 : -1; // update uniforms

  gl.uniform1f(u_time, performance_now__WEBPACK_IMPORTED_MODULE_1___default()() / 1000.0);
  gl.uniform2f(u_resolution, config.width, config.height);
  gl.uniform4f(u_mouse, mouseX, config.height - mouseY, startX * f, (config.height - startY) * f);
  gl.clearColor(0, 0, 0, 0);
  gl.clear(gl.COLOR_BUFFER_BIT); // draw

  var primitiveType = gl.TRIANGLES;
  var offset = 0;
  var count = 6;
  gl.drawArrays(primitiveType, offset, count);
  requestAnimationFrame(main);
}

window.onload = function () {
  // Get A WebGL context
  canvas = document.getElementById("screen");
  gl = canvas.getContext("webgl2");

  if (!gl) {
    canvas.parentNode.removeChild(canvas);
    printError("Cannot run shader. Your browser does not support WebGL2.");
    return;
  } // create GLSL shaders, upload the GLSL source, compile the shaders


  var vertexShader = createShader(gl, gl.VERTEX_SHADER, _rm_05_vert__WEBPACK_IMPORTED_MODULE_2__["default"]);
  var fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, _rm_05_frag__WEBPACK_IMPORTED_MODULE_3__["default"]); // Link the two shaders into a program

  program = createProgram(gl, vertexShader, fragmentShader); // look up where the vertex data needs to go.

  var positionAttributeLocation = gl.getAttribLocation(program, "a_position"); // Create a buffer and put three 2d clip space points in it

  var positionBuffer = gl.createBuffer(); // Bind it to ARRAY_BUFFER (think of it as ARRAY_BUFFER = positionBuffer)

  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);
  var positions = [-1, -1, 1, -1, -1, 1, -1, 1, 1, 1, 1, -1];
  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW); // Create a vertex array object (attribute state)

  vao = gl.createVertexArray(); // and make it the one we're currently working with

  gl.bindVertexArray(vao); // Turn on the attribute

  gl.enableVertexAttribArray(positionAttributeLocation); // Tell the attribute how to get data out of positionBuffer (ARRAY_BUFFER)

  var size = 2; // 2 components per iteration

  var type = gl.FLOAT; // the data is 32bit floats

  var normalize = false; // don't normalize the data

  var stride = 0; // 0 = move forward size * sizeof(type) each iteration to get the next position

  var offset = 0; // start at the beginning of the buffer

  gl.vertexAttribPointer(positionAttributeLocation, size, type, normalize, stride, offset);
  resize(); // Tell WebGL how to convert from clip space to pixels

  gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);
  u_time = gl.getUniformLocation(program, "u_time");
  u_resolution = gl.getUniformLocation(program, "u_resolution");
  u_mouse = gl.getUniformLocation(program, "u_mouse");
  u_palette = gl.getUniformLocation(program, "u_palette");
  u_background = gl.getUniformLocation(program, "u_background");
  u_shiny = gl.getUniformLocation(program, "u_shiny"); // Tell it to use our program (pair of shaders)

  gl.useProgram(program); // Bind the attribute/buffer set we want.

  gl.bindVertexArray(vao);
  window.addEventListener("resize", resize, true);
  canvas.addEventListener("mousemove", onMouseMove, true);
  canvas.addEventListener("mousedown", onMouseDown, true);
  document.addEventListener("mouseup", onMouseUp, true);
  canvasBounds = document.getElementById("screen").getBoundingClientRect();
  gl.uniform3fv(u_palette, _Color__WEBPACK_IMPORTED_MODULE_4__["default"].from(["#000", "#fff", "#f00", "#010144", "#0f0", "#ff0", "#0ff", "#f0f"], 1));
  gl.uniform3fv(u_background, _Color__WEBPACK_IMPORTED_MODULE_4__["default"].from(["#62b9b9", "#0784aa", "#50aead", "#63adad", "#050401", "#d8f9ba", "#dadf5c", "#655de7", "#3bc9cd", "#ff4e49", "#37853a", "#ff9bfc", "#ff2200", "#ff1100", "#ff8800", "#ff0000", "#030103", "#010104", "#888", "#898", "#988", "#889", "#000", "#fff", // repeat first
  "#62b9b9", "#0784aa", "#50aead", "#63adad", "#050401", "#d8f9ba"], 1));
  gl.uniform1fv(u_shiny, new Float32Array([10, 10, 10, 100, 10, 10, 10, 10]));
  requestAnimationFrame(main);
}; // Apply the mouse event listener


function onMouseMove(ev) {
  if (mouseDown) {
    mouseX = ev.clientX - canvasBounds.left + self.pageXOffset;
    mouseY = ev.clientY - canvasBounds.top + self.pageYOffset;
  }
}

function onMouseDown(ev) {
  mouseDown = true;
  startX = ev.clientX - canvasBounds.left + self.pageXOffset;
  startY = ev.clientY - canvasBounds.top + self.pageYOffset;
  mouseX = startX;
  mouseY = startY;
}

function onMouseUp(ev) {
  mouseDown = false;
}

/***/ }),

/***/ "./src/rm-05.frag":
/*!************************!*\
  !*** ./src/rm-05.frag ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#version 300 es\nprecision lowp float;\n#define GLSLIFY 1\n\nuniform float u_time;\nuniform vec2 u_resolution;\nuniform vec4 u_mouse;\nuniform vec3 u_palette[8];\nuniform float u_shiny[8];\nuniform vec3 u_background[30];\n\nconst float pi = 3.141592653589793;\nconst float tau = pi * 2.0;\nconst float hpi = pi * 0.5;\nconst float qpi = pi * 0.25;\nconst float phi = (1.0+sqrt(5.0))/2.0;\n\nout vec4 outColor;\n\n#define MAX_STEPS 100\n#define MAX_DIST 150.\n#define SURF_DIST .001\n\n#define ROT(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n#define SHEARX(a) mat2(1, 0, sin(a), 1)\n\nfloat rand(float n){return fract(sin(n) * 43758.5453123);}\n\n// Camera helper\n\nvec3 Camera(vec2 uv, vec3 p, vec3 l, float z) {\n    vec3 f = normalize(l-p),\n    r = normalize(\n    cross(\n    vec3(0, 1, 0),\n    f\n    )\n    ),\n    u = cross(f, r),\n    c = p + f * z,\n    i = c + uv.x*r + uv.y*u,\n    d = normalize(i-p);\n    return d;\n}\n\n// 2d rotation matrix helper\nmat2 Rot(float a) {\n    float x = cos(a);\n    float y = sin(a);\n    return mat2(x, -y, y, x);\n}\n\n// RAY MARCHING PRIMITIVES\n\nfloat smin(float a, float b, float k) {\n    float h = clamp(0.5+0.5*(b-a)/k, 0., 1.);\n    return mix(b, a, h) - k*h*(1.0-h);\n}\n\nfloat sdCapsule(vec3 p, vec3 a, vec3 b, float r) {\n    vec3 ab = b-a;\n    vec3 ap = p-a;\n\n    float t = dot(ab, ap) / dot(ab, ab);\n    t = clamp(t, 0., 1.);\n\n    vec3 c = a + t*ab;\n\n    return length(p-c)-r;\n}\n\nfloat sdCylinder(vec3 p, vec3 a, vec3 b, float r) {\n    vec3 ab = b-a;\n    vec3 ap = p-a;\n\n    float t = dot(ab, ap) / dot(ab, ab);\n    //t = clamp(t, 0., 1.);\n\n    vec3 c = a + t*ab;\n\n    float x = length(p-c)-r;\n    float y = (abs(t-.5)-.5)*length(ab);\n    float e = length(max(vec2(x, y), 0.));\n    float i = min(max(x, y), 0.);\n\n    return e+i;\n}\n\nfloat sdCappedCylinder( vec3 p, float h, float r )\n{\n    vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(h,r);\n    return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\nfloat sdSphere(vec3 p, float s)\n{\n    return length(p)-s;\n}\n\nfloat sdTorus(vec3 p, vec2 r) {\n    float x = length(p.xz)-r.x;\n    return length(vec2(x, p.y))-r.y;\n}\n\nfloat sdRoundBox(vec3 p, vec3 b, float r)\n{\n    vec3 q = abs(p) - b;\n    return length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0) - r;\n}\n\nfloat sdBeam(vec3 p, vec3 c)\n{\n    return length(p.xz-c.xy)-c.z;\n}\n\nfloat dBox(vec3 p, vec3 s) {\n    p = abs(p)-s;\n    return length(max(p, 0.))+min(max(p.x, max(p.y, p.z)), 0.);\n}\n\nvec2 opUnion(vec2 curr, float d, float id)\n{\n    if (d < curr.x)\n    {\n        curr.x = d;\n        curr.y = id;\n    }\n\n    return curr;\n}\n\nvec2 softMinUnion(vec2 curr, float d, float id)\n{\n    if (d < curr.x)\n    {\n        curr.x = smin(curr.x, d, 0.5);\n        curr.y = id;\n    }\n\n    return curr;\n}\n\nfloat sdBoundingBox(vec3 p, vec3 b, float e)\n{\n    p = abs(p)-b;\n    vec3 q = abs(p+e)-e;\n    return min(min(\n    length(max(vec3(p.x, q.y, q.z), 0.0))+min(max(p.x, max(q.y, q.z)), 0.0),\n    length(max(vec3(q.x, p.y, q.z), 0.0))+min(max(q.x, max(p.y, q.z)), 0.0)),\n    length(max(vec3(q.x, q.y, p.z), 0.0))+min(max(q.x, max(q.y, p.z)), 0.0));\n}\n\nfloat sdHexPrism( vec3 p, vec2 h )\n{\n    const vec3 k = vec3(-0.8660254, 0.5, 0.57735);\n    p = abs(p);\n    p.xy -= 2.0*min(dot(k.xy, p.xy), 0.0)*k.xy;\n    vec2 d = vec2(\n    length(p.xy-vec2(clamp(p.x,-k.z*h.x,k.z*h.x), h.x))*sign(p.y-h.x),\n    p.z-h.y );\n    return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\nfloat shape(float v, float x)\n{\n    return x > 0.0 ? -abs(v) : abs(v);\n}\n\nconst mat2 frontPlaneRot = ROT(0.05235987755982988);\nconst mat2 backPlaneRot = ROT(-0.05235987755982988);\nconst mat2 sCutRot = ROT(0.88);\nconst mat2 rotate90 = ROT(1.5707963267948966);\nconst mat2 rotate60 = ROT(1.0471975511965976);\nconst mat2 rotate30 = ROT(0.5235987755982988);\nconst mat2 fourShear = SHEARX(-0.20943951023931953);\n\nconst float sin60 = sin(tau/6.0);\nvec2 N22 (vec2 p) {\n    vec3 a = fract(p.xyx*vec3(123.34, 234.34, 345.65));\n    a += dot(a, a+34.45);\n    return fract(vec2(a.x*a.y, a.y*a.z));\n}\n\nfloat atan2(in float y, in float x)\n{\n    return abs(x) > abs(y) ? hpi - atan(x,y) : atan(y,x);\n}\nfloat ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n\nfloat sdRhombus( in vec2 p, in vec2 b )\n{\n    vec2 q = abs(p);\n    float h = clamp((-2.0*ndot(q,b)+ndot(b,b))/dot(b,b),-1.0,1.0);\n    float d = length( q - 0.5*b*vec2(1.0-h,1.0+h) );\n    return d * sign( q.x*b.y + q.y*b.x - b.x*b.y );\n}\n\nfloat sdEquilateralTriangle( in vec2 p )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - 1.0;\n    p.y = p.y + 1.0/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0, 0.0 );\n    return -length(p)*sign(p.y);\n}\n\nfloat sdStar5(in vec2 p, in float r, in float rf)\n{\n    const vec2 k1 = vec2(0.809016994375, -0.587785252292);\n    const vec2 k2 = vec2(-k1.x,k1.y);\n    p.x = abs(p.x);\n    p -= 2.0*max(dot(k1,p),0.0)*k1;\n    p -= 2.0*max(dot(k2,p),0.0)*k2;\n    p.x = abs(p.x);\n    p.y -= r;\n    vec2 ba = rf*vec2(-k1.y,k1.x) - vec2(0,1);\n    float h = clamp( dot(p,ba)/dot(ba,ba), 0.0, r );\n    return length(p-ba*h) * sign(p.y*ba.x-p.x*ba.y);\n}\n\nvec2 getDistance(vec3 p) {\n\n    vec2 result = vec2(1e6, 1.0);\n    result = opUnion(result, sdTorus(p - vec3(0,1,0), vec2(2, 0.5)) - 0.05, 1.0);\n    return result;\n\n}\n\nvec3 rayMarch(vec3 ro, vec3 rd) {\n\n    float dO = 0.;\n    float id = 0.0;\n\n    int i;\n\n    for (i=0; i < MAX_STEPS; i++) {\n        vec3 p = ro + rd*dO;\n        vec2 result = getDistance(p);\n        float dS = result.x;\n        dO += dS;\n        id = result.y;\n        if (dO > MAX_DIST || abs(dS) < SURF_DIST * (dO*.125 + 1.))\n        break;\n    }\n\n    return vec3(dO, id, i);\n}\n\nvec3 getNormal(vec3 p) {\n    float d = getDistance(p).x;\n    vec2 e = vec2(.001, 0);\n\n    vec3 n = d - vec3(\n    getDistance(p-e.xyy).x,\n    getDistance(p-e.yxy).x,\n    getDistance(p-e.yyx).x\n    );\n\n    return normalize(n);\n}\n\nvec3 getPaletteColor(float id)\n{\n    int last = u_palette.length() - 1;\n    //return id < float(last) ? mix(u_palette[int(id)], u_palette[int(id) + 1], fract(id)) : u_palette[last];\n    return mix(u_palette[int(id)], u_palette[int(id) + 1], fract(id));\n}\n\nvec3 applyFog(\nin vec3  rgb,      // original color of the pixel\nin float distance, // camera to point distance\nin vec3  rayOri,   // camera position\nin vec3  rayDir,\nin vec3 p     // camera to point vector\n)\n{\n    float pos = p.z;\n\n    float c = 0.005;\n    float b = 2.0;// + sin((pos + p.x * sin(pos * 0.27)) * 0.31 ) * 0.15 + sin(pos * 0.17 ) * 0.15;\n\n    float fogAmount = c * exp(-rayOri.y*b) * (1.0-exp( -distance*rayDir.y*b ))/rayDir.y;\n    vec3  fogColor  = vec3(1);\n    return mix( rgb, fogColor, fogAmount );\n}\n\nfloat softshadow( in vec3 ro, in vec3 rd, float k, float mx )\n{\n    float res = 1.0;\n    float ph = 1e20;\n    for( float t=0.001; t < mx; )\n    {\n        float h = getDistance(ro + rd*t).x;\n        if( h < 0.0001 )\n        return 0.0;\n\n        float y = h * h / ( 2.0 * ph );\n        float d = sqrt( h * h - y * y);\n        res = min( res, k * d /max(0.0, t -y) );\n        ph = h;\n        t += h;\n    }\n    return res;\n}\n\nvec3 getBackground(in vec3 n, int offset)\n{\n\n    vec3 tb = vec3(0, n.y > 0.0 ? 1 : -1 , 0);\n    vec3 tbCol = u_background[offset + (n.y > 0.0 ? 5 : 4)];\n\n    vec3 rl = vec3(n.x > 0.0 ? 1 : -1 , 0, 0);\n    vec3 rlCol = u_background[offset + (n.x > 0.0 ? 0 : 2)];\n\n    vec3 fb = vec3(0, 0, n.z > 0.0 ? 1 : -1);\n    vec3 fbCol = u_background[offset + (n.z > 0.0 ? 1 : 3)];\n\n    float a1 = length(cross(n, tb));\n    float a2 = length(cross(n, rl));\n    float a3 = length(cross(n, fb));\n\n    return tbCol * (1.0 - a1) + rlCol * (1.0 - a2) + fbCol * (1.0 - a3);\n}\n\nvoid main(void)\n{\n    vec2 uv = (gl_FragCoord.xy-.5*u_resolution.xy)/u_resolution.y;\n\n    vec2 m = u_mouse.xy/u_resolution.xy;\n\n    vec3 ro = vec3(\n    0,\n    6,\n    -10\n    );\n\n    ro.yz *= Rot((-m.y + 0.5) * pi + u_time * 0.27);\n    ro.xz *= Rot((-m.x + 0.5) * 7.0 - u_time * 0.31);\n\n    vec3 lookAt = vec3(0, 1, 0);\n\n    vec3 rd = Camera(uv, ro, lookAt, 1.5);\n\n    float t = u_time * 0.025;\n\n    float pos = fract(t * 4.0);\n    float id = mod(floor(t * 4.0), 4.0);\n    int offset = int(id + step(0.5, -2. + (pos * 4.0) + sin(length(vec2(rand(id) * 0.5, rand(id+12.0) * 0.5) - uv)))) * 6;\n\n    vec3 col = getBackground(rd, offset);\n\n    vec3 result = rayMarch(ro, rd);\n    float d = result.x;\n\n    vec3 p = ro + rd * d;\n    if (d < MAX_DIST) {\n\n        vec3 lightPos = vec3(-4,4,-4);\n        //vec3 lightPos = vec3(-40,20,0);\n        vec3 lightDir = normalize(lightPos - p);\n        vec3 norm = getNormal(p);\n\n        vec3 lightColor = vec3(1.0);\n\n        float id = result.y;\n\n        // ambient\n        vec3 ambient = lightColor * vec3(0.001,0.005,0.01);\n\n        // diffuse\n        float diff = max(dot(norm, lightDir), 0.0);\n        vec3 tone = getPaletteColor(id);\n\n        //float shadow = softshadow(p, lightDir, 2.0);\n        //vec3 diffuse = lightColor * pow(vec3(shadow),vec3(1.0,1.2,1.5)) * (diff * tone);\n\n        // specular\n        vec3 viewDir = normalize(rd);\n        vec3 reflectDir = reflect(lightDir, norm);\n        float spec = pow(max(dot(viewDir, reflectDir), 0.0), u_shiny[int(id)]);\n        //float shadow = softshadow(p, lightDir, 10.0, length(lightPos - p));\n        vec3 specular = lightColor * spec * vec3(0.7843,0.8823,0.9451) * 0.5;\n\n        vec3 ref = getBackground(reflect(rd, norm), offset);\n        vec3 diffuse = diff * tone;\n\n        col = ref * 0.7 + ambient + (diffuse + specular) ;\n\n    }\n    //col = applyFog(col, d, ro, rd, p);\n\n    col = pow(col, vec3(1.0/2.2));\n\n    outColor = vec4(\n        col,\n        1.0\n    );\n\n    //outColor = vec4(1,0,1,1);\n}\n");

/***/ }),

/***/ "./src/rm-05.vert":
/*!************************!*\
  !*** ./src/rm-05.vert ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#version 300 es\n#define GLSLIFY 1\n\n// an attribute is an input (in) to a vertex shader.\n// It will receive data from a buffer\nin vec4 a_position;\n\n// all shaders have a main function\nvoid main() {\n\n    // gl_Position is a special variable a vertex shader\n    // is responsible for setting\n    gl_Position = a_position;\n}\n");

/***/ }),

/***/ "./src/style.css":
/*!***********************!*\
  !*** ./src/style.css ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ })

/******/ });
//# sourceMappingURL=bundle-main-5bcd28ee1f5d97545152.js.map